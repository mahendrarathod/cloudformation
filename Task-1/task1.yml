Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Create VPC"
        Parameters:
          - vpc
          - VPCInstanceTenancy
      -
        Label:
          default: "Create Public Sublet"
        Parameters:
          - Publicsubnet
          - AvailabilityZone1
      -
        Label:
          default: "Create Private Sublet"
        Parameters:
          - Privatesubnet
          - AvailabilityZone2
Parameters:
  vpc:
    Description: Creating VPC .
    Type: String
    Default: 10.0.0.0/16
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be valid IP Range.
  VPCInstanceTenancy:
    Type: String
    Description: Tenency for VPC
    Default: default
    AllowedValues:
      - default
      - dedicated
  Publicsubnet:
    Description: Public Subnet.
    Type: String
    Default: 10.0.1.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be valid Public subnet IP Range.
  Privatesubnet:
    Description: Private Subnet.
    Type: String
    Default: 10.0.2.0/24
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: Must be valid Private subnet IP Range.
  AvailabilityZone1:
    Description: Please provide only one Availabilty Zone.
    Type: AWS::EC2::AvailabilityZone::Name
  AvailabilityZone2:
    Description: Please provide only one Availabilty Zone.
    Type: AWS::EC2::AvailabilityZone::Name

Resources:
      task1vpc:
        Type: 'AWS::EC2::VPC'
        Properties:
          CidrBlock: !Ref vpc
          EnableDnsSupport: true
          EnableDnsHostnames: true
          InstanceTenancy: !Ref VPCInstanceTenancy
          Tags:
            - Key: Name
              Value: task1VPC
      PubSubnet:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref task1vpc
          AvailabilityZone: !Ref AvailabilityZone1
          CidrBlock: !Ref Publicsubnet
          MapPublicIpOnLaunch: true
          Tags:
            - Key: Name
              Value: task1PublicSubnet
      Prisubnet:
        Type: 'AWS::EC2::Subnet'
        Properties:
          VpcId: !Ref task1vpc
          AvailabilityZone: !Ref AvailabilityZone2
          CidrBlock: !Ref Privatesubnet
          Tags:
            - Key: Name
              Value: task1PrivateSubnet
      InternetGateway:
        Type: 'AWS::EC2::InternetGateway'
        DependsOn: task1vpc
        Properties:
          Tags:
            - Key: Name
              Value: task1InternetGateway
      AttachedIGWtoVPC:
        Type: 'AWS::EC2::VPCGatewayAttachment'
        Properties:
          VpcId: !Ref task1vpc
          InternetGatewayId: !Ref InternetGateway
      PublicRouteTable:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref task1vpc
            Tags:
            - Key: Name
              Value: task1PublicRouteTable
      PrivateRouteTable:
        Type: "AWS::EC2::RouteTable"
        Properties:
            VpcId: !Ref task1vpc
            Tags:
            - Key: Name
              Value: task1PrivateRouteTable
      PublicSubnetRouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
          SubnetId: !Ref PubSubnet
          RouteTableId: !Ref PublicRouteTable
      PrivateSubnetRouteTableAssociation:
        Type: 'AWS::EC2::SubnetRouteTableAssociation'
        Properties:
          SubnetId: !Ref Prisubnet
          RouteTableId: !Ref PrivateRouteTable
      AddPublicRoute:
        Type: AWS::EC2::Route
        DependsOn: AttachedIGWtoVPC
        Properties:
          DestinationCidrBlock: "0.0.0.0/0"
          GatewayId: !Ref InternetGateway
          RouteTableId: !Ref PublicRouteTable






